=begin
#Pipedrive API v1

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

# Common files
require 'pipedrive-ruby/api_client'
require 'pipedrive-ruby/api_error'
require 'pipedrive-ruby/version'
require 'pipedrive-ruby/configuration'

# Models

# APIs
require 'pipedrive-ruby/api/activities_api'
require 'pipedrive-ruby/api/activity_fields_api'
require 'pipedrive-ruby/api/activity_types_api'
require 'pipedrive-ruby/api/authorizations_api'
require 'pipedrive-ruby/api/currencies_api'
require 'pipedrive-ruby/api/deal_fields_api'
require 'pipedrive-ruby/api/deals_api'
require 'pipedrive-ruby/api/files_api'
require 'pipedrive-ruby/api/filters_api'
require 'pipedrive-ruby/api/global_messages_api'
require 'pipedrive-ruby/api/goals_api'
require 'pipedrive-ruby/api/mail_messages_api'
require 'pipedrive-ruby/api/mail_threads_api'
require 'pipedrive-ruby/api/note_fields_api'
require 'pipedrive-ruby/api/notes_api'
require 'pipedrive-ruby/api/organization_fields_api'
require 'pipedrive-ruby/api/organization_relationships_api'
require 'pipedrive-ruby/api/organizations_api'
require 'pipedrive-ruby/api/permission_sets_api'
require 'pipedrive-ruby/api/person_fields_api'
require 'pipedrive-ruby/api/persons_api'
require 'pipedrive-ruby/api/pipelines_api'
require 'pipedrive-ruby/api/product_fields_api'
require 'pipedrive-ruby/api/products_api'
require 'pipedrive-ruby/api/push_notifications_api'
require 'pipedrive-ruby/api/recents_api'
require 'pipedrive-ruby/api/roles_api'
require 'pipedrive-ruby/api/search_results_api'
require 'pipedrive-ruby/api/stages_api'
require 'pipedrive-ruby/api/user_connections_api'
require 'pipedrive-ruby/api/user_settings_api'
require 'pipedrive-ruby/api/users_api'
require 'pipedrive-ruby/api/webhooks_api'

module Pipedrive
  class << self
    # Customize default settings for the SDK using block.
    #   Pipedrive.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
