=begin
#Pipedrive API v1

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require "uri"

module Pipedrive
  class MailThreadsApi
    attr_accessor :api_client

    def initialize(api_client = Client.default)
      @api_client = api_client
    end

    # Get mail threads
    # Returns mail threads in specified folder ordered by most recent message within.
    # @param folder Type of folder to fetch.
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :start Index of the first item. If not set, then equals 0.
    # @option opts [Float] :limit Amount of threads to fetch. If not set, then equals 50.
    # @return [nil]
    def mailbox_mail_threads_get(folder, opts = {})
      mailbox_mail_threads_get_with_http_info(folder, opts)
      end

    # Get mail threads
    # Returns mail threads in specified folder ordered by most recent message within.
    # @param folder Type of folder to fetch.
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :start Index of the first item. If not set, then equals 0.
    # @option opts [Float] :limit Amount of threads to fetch. If not set, then equals 50.
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def mailbox_mail_threads_get_with_http_info(folder, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailThreadsApi.mailbox_mail_threads_get ..."
      end
      # verify the required parameter 'folder' is set
      if @api_client.config.client_side_validation && folder.nil?
        fail ArgumentError, "Missing the required parameter 'folder' when calling MailThreadsApi.mailbox_mail_threads_get"
      end
      # resource path
      local_var_path = "/mailbox/mailThreads"

      # query parameters
      query_params = {}
      query_params[:'folder'] = folder
      query_params[:'start'] = opts[:'start'] if !opts[:'start'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = [ 'access_token' ]
      response = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailThreadsApi#mailbox_mail_threads_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return response
    end

    # Delete mail thread
    # Marks mail thread as deleted.
    # @param id ID of the mail thread to delete.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def mailbox_mail_threads_id_delete(id, opts = {})
      mailbox_mail_threads_id_delete_with_http_info(id, opts)
      end

    # Delete mail thread
    # Marks mail thread as deleted.
    # @param id ID of the mail thread to delete.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def mailbox_mail_threads_id_delete_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailThreadsApi.mailbox_mail_threads_id_delete ..."
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling MailThreadsApi.mailbox_mail_threads_id_delete"
      end
      # resource path
      local_var_path = "/mailbox/mailThreads/{id}".sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = [ 'access_token' ]
      response = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailThreadsApi#mailbox_mail_threads_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return response
    end

    # Get one mail thread
    # Returns specific mail thread.
    # @param id ID of the mail thread to fetch.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def mailbox_mail_threads_id_get(id, opts = {})
      mailbox_mail_threads_id_get_with_http_info(id, opts)
      end

    # Get one mail thread
    # Returns specific mail thread.
    # @param id ID of the mail thread to fetch.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def mailbox_mail_threads_id_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailThreadsApi.mailbox_mail_threads_id_get ..."
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling MailThreadsApi.mailbox_mail_threads_id_get"
      end
      # resource path
      local_var_path = "/mailbox/mailThreads/{id}".sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = [ 'access_token' ]
      response = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailThreadsApi#mailbox_mail_threads_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return response
    end

    # Get all mail messages of mail thread
    # Get mail messages inside specified mail thread.
    # @param id ID of the mail thread.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def mailbox_mail_threads_id_mail_messages_get(id, opts = {})
      mailbox_mail_threads_id_mail_messages_get_with_http_info(id, opts)
      end

    # Get all mail messages of mail thread
    # Get mail messages inside specified mail thread.
    # @param id ID of the mail thread.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def mailbox_mail_threads_id_mail_messages_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailThreadsApi.mailbox_mail_threads_id_mail_messages_get ..."
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling MailThreadsApi.mailbox_mail_threads_id_mail_messages_get"
      end
      # resource path
      local_var_path = "/mailbox/mailThreads/{id}/mailMessages".sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = [ 'access_token' ]
      response = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailThreadsApi#mailbox_mail_threads_id_mail_messages_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return response
    end

    # Update mail thread details
    # Updates the properties of a mail thread.
    # @param id ID of the mail thread
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :deal_id ID of the deal this thread is associated with
    # @option opts [String] :shared_flag Whether this thread is shared with other users in your company (default to )
    # @option opts [String] :read_flag Whether this thread read or unread (default to )
    # @option opts [String] :archived_flag Whether this thread is archived or not. You can only archive threads that belong to Inbox folder. Archived threads will disappear from Inbox. (default to 0)
    # @return [nil]
    def mailbox_mail_threads_id_put(id, opts = {})
      mailbox_mail_threads_id_put_with_http_info(id, opts)
      end

    # Update mail thread details
    # Updates the properties of a mail thread.
    # @param id ID of the mail thread
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :deal_id ID of the deal this thread is associated with
    # @option opts [String] :shared_flag Whether this thread is shared with other users in your company
    # @option opts [String] :read_flag Whether this thread read or unread
    # @option opts [String] :archived_flag Whether this thread is archived or not. You can only archive threads that belong to Inbox folder. Archived threads will disappear from Inbox.
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def mailbox_mail_threads_id_put_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: MailThreadsApi.mailbox_mail_threads_id_put ..."
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling MailThreadsApi.mailbox_mail_threads_id_put"
      end
      # resource path
      local_var_path = "/mailbox/mailThreads/{id}".sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}
      form_params["deal_id"] = opts[:'deal_id'] if !opts[:'deal_id'].nil?
      form_params["shared_flag"] = opts[:'shared_flag'] if !opts[:'shared_flag'].nil?
      form_params["read_flag"] = opts[:'read_flag'] if !opts[:'read_flag'].nil?
      form_params["archived_flag"] = opts[:'archived_flag'] if !opts[:'archived_flag'].nil?

      # http body (model)
      post_body = nil
      auth_names = [ 'access_token' ]
      response = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MailThreadsApi#mailbox_mail_threads_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return response
    end
  end
end
