=begin
#Pipedrive API v1

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require "uri"

module Pipedrive
  class GlobalMessagesApi
    attr_accessor :api_client

    def initialize(api_client = Client.default)
      @api_client = api_client
    end

    # Get global messages
    # Returns data about global messages to display for the authorized user.
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :limit Number of messages to get from 1 to 100. 1 message is returned by default. (default to 1)
    # @return [nil]
    def global_messages_get(opts = {})
      global_messages_get_with_http_info(opts)
      end

    # Get global messages
    # Returns data about global messages to display for the authorized user.
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :limit Number of messages to get from 1 to 100. 1 message is returned by default.
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_messages_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobalMessagesApi.global_messages_get ..."
      end
      # resource path
      local_var_path = "/globalMessages"

      # query parameters
      query_params = {}
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = [ 'access_token' ]
      response = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobalMessagesApi#global_messages_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return response
    end

    # Dismiss a global message
    # Removes global message from being shown, if message is dismissible
    # @param id ID of global message to be dismissed.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def global_messages_id_delete(id, opts = {})
      global_messages_id_delete_with_http_info(id, opts)
      end

    # Dismiss a global message
    # Removes global message from being shown, if message is dismissible
    # @param id ID of global message to be dismissed.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_messages_id_delete_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobalMessagesApi.global_messages_id_delete ..."
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling GlobalMessagesApi.global_messages_id_delete"
      end
      # resource path
      local_var_path = "/globalMessages/{id}".sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = [ 'access_token' ]
      response = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobalMessagesApi#global_messages_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return response
    end
  end
end
