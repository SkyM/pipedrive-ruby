=begin
#Pipedrive API v1

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Pipedrive::StagesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'StagesApi' do
  before do
    # run before each test
    @instance = Pipedrive::StagesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of StagesApi' do
    it 'should create an instance of StagesApi' do
      expect(@instance).to be_instance_of(Pipedrive::StagesApi)
    end
  end

  # unit tests for stages_delete
  # Delete multiple stages in bulk
  # Marks multiple stages as deleted.
  # @param ids Comma-separated stage IDs to delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'stages_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for stages_get
  # Get all stages
  # Returns data about all stages
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :pipeline_id ID of the pipeline to fetch stages for. If omitted, stages for all pipelines will be fetched.
  # @return [nil]
  describe 'stages_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for stages_id_deals_get
  # Get deals in a stage
  # Lists deals in a specific stage
  # @param id ID of the stage
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :filter_id If supplied, only deals matching the given filter will be returned.
  # @option opts [Float] :user_id If supplied, filter_id will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned.
  # @option opts [String] :everyone If supplied, filter_id and user_id will not be considered â€“ instead, deals owned by everyone will be returned.
  # @option opts [Float] :start Pagination start
  # @option opts [Float] :limit Items shown per page
  # @return [nil]
  describe 'stages_id_deals_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for stages_id_delete
  # Delete a stage
  # Marks a stage as deleted.
  # @param id ID of the stage to delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'stages_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for stages_id_get
  # Get one stage
  # Returns data about a specific stage
  # @param id ID of the stage
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'stages_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for stages_id_put
  # Update stage details
  # Updates the properties of a stage.
  # @param id ID of the stage
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Name of the stage
  # @option opts [Float] :pipeline_id ID of the pipeline this stage belongs to.
  # @option opts [Float] :order_nr An order number for this stage. Order numbers should be used to order the stages in the pipeline.
  # @option opts [Float] :deal_probability Deal success probability percentage. Used/shown when deal weighted values are used.
  # @option opts [String] :rotten_flag Whether deals in this stage can become rotten.
  # @option opts [Float] :rotten_days Number of days the deals not updated in this stage would become rotten. Applies only if rotten_flag is set.
  # @return [nil]
  describe 'stages_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for stages_post
  # Add a new stage
  # Adds a new stage, returns the ID upon success.
  # @param name Name of the stage
  # @param pipeline_id ID of the pipeline to add stage to.
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :deal_probability Deal success probability percentage. Used/shown when deal weighted values are used.
  # @option opts [String] :rotten_flag Whether deals in this stage can become rotten.
  # @option opts [Float] :rotten_days Number of days the deals not updated in this stage would become rotten. Applies only if rotten_flag is set.
  # @return [nil]
  describe 'stages_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
