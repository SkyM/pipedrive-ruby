=begin
#Pipedrive API v1

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Pipedrive::ActivityTypesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ActivityTypesApi' do
  before do
    # run before each test
    @instance = Pipedrive::ActivityTypesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ActivityTypesApi' do
    it 'should create an instance of ActivityTypesApi' do
      expect(@instance).to be_instance_of(Pipedrive::ActivityTypesApi)
    end
  end

  # unit tests for activity_types_delete
  # Delete multiple activity types in bulk
  # Marks multiple activity types as deleted.
  # @param ids Comma-separated activity type IDs to delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'activity_types_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activity_types_get
  # Get all activity types
  # Returns all activity types
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'activity_types_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activity_types_id_delete
  # Delete an activity type
  # Marks an activity type as deleted.
  # @param id ID of the activity type
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'activity_types_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activity_types_id_put
  # Edit activity type
  # Updates an activity type.
  # @param id ID of the activity type
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Name of the activity type
  # @option opts [String] :icon_key Icon graphic to use. Supported values: default, call, meeting, lunch, email, task, deadline. Additional supported values will be made available in the future.
  # @option opts [String] :color A designated color for the activity type in 6-character HEX format (e.g. FFFFFF for white, 000000 for black).
  # @option opts [Float] :order_nr An order number for this activity type. Order numbers should be used to order the types in the activity type selections.
  # @return [nil]
  describe 'activity_types_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activity_types_post
  # Add new activity type
  # Adds a new activity type, returns the ID, the key_string and the order number of the newly added activity type upon success.
  # @param name Name of the activity type
  # @param icon_key Icon graphic to use for representing this activity type.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :color A designated color for the activity type in 6-character HEX format (e.g. FFFFFF for white, 000000 for black).
  # @return [nil]
  describe 'activity_types_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
