=begin
#Pipedrive API v1

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Pipedrive::GoalsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GoalsApi' do
  before do
    # run before each test
    @instance = Pipedrive::GoalsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GoalsApi' do
    it 'should create an instance of GoalsApi' do
      expect(@instance).to be_instance_of(Pipedrive::GoalsApi)
    end
  end

  # unit tests for goals_get
  # Get all goals
  # Returns data about all goals.
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :user_id ID of the user who&#39;s goal to fetch. When omitted, only your goals will be returned.
  # @option opts [String] :everyone If provided, everyone&#39;s goals will be returned.
  # @return [nil]
  describe 'goals_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for goals_id_delete
  # Delete existing goal
  # Marks goal as deleted.
  # @param id ID of the goal to mark as deleted.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'goals_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for goals_id_get
  # Get details of a goal
  # Returns data about a specific goal.
  # @param id ID of the goal to fetch.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'goals_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for goals_id_put
  # Update goal details
  # Updates the properties of a goal.
  # @param id ID of the goal to update.
  # @param goal_type Goal type.
  # @param expected_type Expected type.
  # @param period Period of time.
  # @param expected Expected sum or number.
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :user_id ID of the user who will be associated with this goal. If omitted, the authorized user will be used.
  # @option opts [Float] :stage_id ID of the stage. This field is required when goal_type &#x3D; stage.
  # @option opts [String] :currency Currency of the goal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.
  # @option opts [Float] :pipeline_id ID of the pipeline to add goal to.
  # @return [nil]
  describe 'goals_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for goals_id_results_get
  # Get results of one goal
  # Lists results of a specific goal.
  # @param id ID of the goal to mark as deleted.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :period_start Start of the period. Date in format of YYYY-MM-DD.
  # @option opts [String] :period_end End of the period. Date in format of YYYY-MM-DD.
  # @return [nil]
  describe 'goals_id_results_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for goals_post
  # Add a new goal
  # Adds a new goal, returns the ID upon success.
  # @param goal_type Goal type.
  # @param expected_type Expected type.
  # @param period Period of time.
  # @param expected Expected sum or number.
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :user_id ID of the user who will be associated with this goal. If omitted, the authorized user will be used.
  # @option opts [Float] :stage_id ID of the stage. This field is required when goal_type &#x3D; stage.
  # @option opts [String] :currency Currency of the goal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.
  # @option opts [Float] :pipeline_id ID of the pipeline to add goal to.
  # @return [nil]
  describe 'goals_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
