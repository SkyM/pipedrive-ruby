=begin
#Pipedrive API v1

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Pipedrive::PermissionSetsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PermissionSetsApi' do
  before do
    # run before each test
    @instance = Pipedrive::PermissionSetsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PermissionSetsApi' do
    it 'should create an instance of PermissionSetsApi' do
      expect(@instance).to be_instance_of(Pipedrive::PermissionSetsApi)
    end
  end

  # unit tests for permission_sets_get
  # Get all permission sets
  # 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'permission_sets_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for permission_sets_id_assignments_delete
  # Delete a permission set assignment
  # Delete assignment from a permission set
  # @param id ID of the permission set
  # @param user_id ID of the user
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'permission_sets_id_assignments_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for permission_sets_id_assignments_get
  # List permission set assignments
  # List assignments for a permission set
  # @param id ID of the permission set
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :start Pagination start
  # @option opts [Float] :limit Items shown per page
  # @return [nil]
  describe 'permission_sets_id_assignments_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for permission_sets_id_assignments_post
  # Add permission set assignment
  # Add assignment for a permission set
  # @param id ID of the permission set
  # @param user_id ID of the user
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'permission_sets_id_assignments_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for permission_sets_id_get
  # Get one permission set
  # 
  # @param id ID of the permission set
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'permission_sets_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for permission_sets_id_put
  # Update permission set details
  # 
  # @param id ID of the permission set
  # @param contents Permissions that this set contains as JSON or ordinary comma separated string. Possible permission names are: can_change_visibility_of_items, can_see_company_wide_statistics, can_delete_deals, can_see_deals_list_summary, can_export_data_from_lists, can_see_other_users_statistics
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'permission_sets_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
