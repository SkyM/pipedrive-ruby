=begin
#Pipedrive API v1

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Pipedrive::RolesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RolesApi' do
  before do
    # run before each test
    @instance = Pipedrive::RolesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RolesApi' do
    it 'should create an instance of RolesApi' do
      expect(@instance).to be_instance_of(Pipedrive::RolesApi)
    end
  end

  # unit tests for roles_get
  # Get all roles
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :start Pagination start
  # @option opts [Float] :limit Items shown per page
  # @return [nil]
  describe 'roles_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for roles_id_assignments_delete
  # Delete a role assignment
  # Delete assignment from a role
  # @param id ID of the role
  # @param user_id ID of the user
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'roles_id_assignments_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for roles_id_assignments_get
  # List role assignments
  # List assignments for a role
  # @param id ID of the role
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :start Pagination start
  # @option opts [Float] :limit Items shown per page
  # @return [nil]
  describe 'roles_id_assignments_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for roles_id_assignments_post
  # Add role assignment
  # Add assignment for a role
  # @param id ID of the role
  # @param user_id ID of the user
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'roles_id_assignments_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for roles_id_delete
  # Delete a role
  # 
  # @param id ID of the role
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'roles_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for roles_id_get
  # Get one role
  # 
  # @param id ID of the role
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'roles_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for roles_id_put
  # Update role details
  # 
  # @param id ID of the role
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :parent_role_id 
  # @option opts [String] :name 
  # @return [nil]
  describe 'roles_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for roles_id_roles_get
  # List role sub-roles
  # 
  # @param id ID of the role
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :start Pagination start
  # @option opts [Float] :limit Items shown per page
  # @return [nil]
  describe 'roles_id_roles_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for roles_id_settings_get
  # List role settings
  # 
  # @param id ID of the role
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'roles_id_settings_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for roles_id_settings_post
  # Add or update role setting
  # 
  # @param id ID of the role
  # @param setting_key 
  # @param value Possible values for default_visibility settings: 0...1; for access_level settings: 1...7
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'roles_id_settings_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for roles_post
  # Add a role
  # 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :parent_role_id 
  # @return [nil]
  describe 'roles_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
