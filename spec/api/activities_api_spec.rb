=begin
#Pipedrive API v1

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Pipedrive::ActivitiesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ActivitiesApi' do
  before do
    # run before each test
    @instance = Pipedrive::ActivitiesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ActivitiesApi' do
    it 'should create an instance of ActivitiesApi' do
      expect(@instance).to be_instance_of(Pipedrive::ActivitiesApi)
    end
  end

  # unit tests for activities_delete
  # Delete multiple activities in bulk
  # Marks multiple activities as deleted.
  # @param ids Comma-separated IDs that will be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'activities_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activities_get
  # Get all activities assigned to a particular user
  # Returns all activities assigned to a particular user
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :user_id ID of the user who&#39;s activities to fetch. If omitted, the authorized user will be used. If 0, activities for all users in company will be fetched.
  # @option opts [Float] :filter_id ID of the filter to use (will narrow down results if used together with user_id parameter).
  # @option opts [String] :type Type of the activity. This is in correlation with the key_string parameter of ActivityTypes.
  # @option opts [Float] :start Pagination start
  # @option opts [Float] :limit Items shown per page
  # @option opts [String] :start_date Date in format of YYYY-MM-DD from which activities to fetch from.
  # @option opts [String] :end_date Date in format of YYYY-MM-DD until which activities to fetch to.
  # @option opts [String] :done Whether the activity is done or not. 0 &#x3D; Not done, 1 &#x3D; Done. If omitted returns both Done and Not done
  # @return [nil]
  describe 'activities_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activities_id_delete
  # Delete an activity
  # Deletes an activity
  # @param id ID of the activity
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'activities_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activities_id_get
  # Get details of an activity
  # Returns details of a specific activity.
  # @param id ID of the activity
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'activities_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activities_id_put
  # Edit an activity
  # Modifies an activity. Includes more_activities_scheduled_in_context property in response&#39;s additional_data which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data).
  # @param id ID of the activity
  # @param [Hash] opts the optional parameters
  # @option opts [String] :subject Subject of the activity. When omitted, will remain unchanged.
  # @option opts [String] :done Whether the activity is done or not. 0 &#x3D; Not done, 1 &#x3D; Done
  # @option opts [String] :type Type of the activity. This is in correlation with the key_string parameter of ActivityTypes.
  # @option opts [String] :due_date Due date of the activity. Format: YYYY-MM-DD
  # @option opts [String] :due_time Due time of the activity in UTC. Format: HH:MM
  # @option opts [String] :duration Duration of the activity. Format: HH:MM
  # @option opts [Float] :user_id ID of the user whom the activity will be assigned to
  # @option opts [Float] :deal_id ID of the deal this activity will be associated with
  # @option opts [Float] :person_id ID of the person this activity will be associated with
  # @option opts [] :participants List of multiple persons (participants) this activity will be associated with. If omitted, single participant from person_id field is used. It requires a structure as follows: [{\&quot;person_id\&quot;:1,\&quot;primary_flag\&quot;:true}]
  # @option opts [Float] :org_id ID of the organization this activity will be associated with
  # @option opts [String] :note Note of the activity (HTML format). When omitted, will remain unchanged.
  # @return [nil]
  describe 'activities_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for activities_post
  # Add an activity
  # Adds a new activity. Includes more_activities_scheduled_in_context property in response&#39;s additional_data which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data).
  # @param subject Subject of the activity
  # @param type Type of the activity. This is in correlation with the key_string parameter of ActivityTypes.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :done Whether the activity is done or not. 0 &#x3D; Not done, 1 &#x3D; Done
  # @option opts [String] :due_date Due date of the activity. Format: YYYY-MM-DD
  # @option opts [String] :due_time Due time of the activity in UTC. Format: HH:MM
  # @option opts [String] :duration Duration of the activity. Format: HH:MM
  # @option opts [Float] :user_id ID of the user whom the activity will be assigned to. If omitted, the activity will be assigned to the authorized user.
  # @option opts [Float] :deal_id ID of the deal this activity will be associated with
  # @option opts [Float] :person_id ID of the person this activity will be associated with
  # @option opts [] :participants List of multiple persons (participants) this activity will be associated with. If omitted, single participant from person_id field is used. It requires a structure as follows: [{\&quot;person_id\&quot;:1,\&quot;primary_flag\&quot;:true}]
  # @option opts [Float] :org_id ID of the organization this activity will be associated with
  # @option opts [String] :note Note of the activity (HTML format)
  # @return [nil]
  describe 'activities_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
